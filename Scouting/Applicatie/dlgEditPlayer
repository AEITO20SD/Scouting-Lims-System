/********************************************************************************
Description.. :	

Parameters... :	- 

Returns...... :	- 

Author....... :	SYSADM
Date......... : 2024-02-26
********************************************************************************
_______________________________________________________________________________

Ticket #..... : 
Modification. : 
Author....... :	
Date......... :	
_______________________________________________________________________________
********************************************************************************/

//BEGIN_GLOBAL_DECLARATIONS (place global declarations inside this section)

var pnlPlayer = form.All( "pnlPlayer" ); // Panel
var btnClose = form.All( "btnClose" ); // Button
var txtClub = form.All( "txtClub" ); // TextBox
var txtPosition = form.All( "txtPosition" ); // TextBox
var txtPhone = form.All( "txtPhone" ); // TextBox
var txtEmail = form.All( "txtEmail" ); // TextBox
var txtCity = form.All( "txtCity" ); // TextBox
var txtName = form.All( "txtName" ); // TextBox
var btnOK = form.All( "btnOK" ); // Button

//END_GLOBAL_DECLARATIONS


//region MODULE VARIABLES DECLARATIONS
if (!form.formArguments)
	form.formArguments = {
		"playerId" : -1
	}
//endregion


//region FORM LOAD / UNLOAD

//endregion


//region FORM EVENTS
async function Form1_OnLoad( sender, eventArgs )
{
	pnlPlayer.Data = lims.GetDataSource("Player_Profile.PlayerById", [form.formArguments.playerId]);
}
//endregion
async function btnOK_OnClick( sender, eventArgs )
{
if (!ValidateRequiredFields())
		return;
	const UpdatePlayer = {
	"Name" : txtName.Text.Trim(),
	"City" : txtCity.Text.Trim(),
	"Email" : txtEmail.Text.Trim(),
	"Phone" : txtPhone.Text.Trim(),
	"Position" : txtPosition.Text.Trim(),
		"Club" : txtClub.Text.Trim()
	};
	  await lims.CallServerAsync("Player_Profile.Player.Edit", [form.formArguments.playerId, UpdatePlayer]);
	await form.Close();
}
function ValidateRequiredFields()
{
	const arReqFields = [txtName, txtPosition, txtPhone, txtClub, txtCity ];
	let bValid = true;
	
	for(let i = 0; i < arReqFields.length; i++)
	{
		const fld = arReqFields[i];
		fld.ShowError("");
		
		if (fld.Text.Trim().length == 0)
		{
		fld.ShowError(form.Resources["RequiredField"]);
		
//			
			bValid = false;
			
		}
	}
	
	return bValid;
	
}


async function btnClose_OnClick( sender, eventArgs )
{
form.Close();
}


//region USER DEFINED FUNCTIONS

//endregion



